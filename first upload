<!DOCTYPE html>
<html>
<head>
    <title>Update Product</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script>
        document.documentElement.style.setProperty('--specification-counter', '{{ specification_counter }}');
    </script>
</head>
<style>
    .existing-product-image-container {
        position: relative;
        margin: 5px;
        cursor: pointer;
    }

    .existing-product-image {
        max-width: 100%;
        border: 1px solid #ddd;
        border-radius: 5px;
        transition: border-color 0.3s;
    }

    .existing-product-image.selected {
        border-color: #007bff;
    }

    .image-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 123, 255, 0.5); /* Highlight color */
        display: none;
    }

    .existing-product-image-container:hover .image-overlay {
        display: block;
    }
</style>

<body>

    <div class="container mt-4">
        <h1>Update Product</h1>
        <form action="/api/secret/update_products" method="POST" enctype="multipart/form-data">
            <input type="hidden" name="pid" value="{{ product.pid }}">
            <div class="form-group">
                <label for="name">Name:</label>
                <input type="text" class="form-control" id="name" name="name" value="{{ product.name }}" required>
            </div>
            <div class="form-group">
                <label for="info">Info:</label>
                <textarea class="form-control" id="info" name="info" required>{{ product.info }}</textarea>
            </div>
            <div class="form-group">
                <label for="description">Description:</label>
                <textarea class="form-control" id="description" name="description" required>{{ product.description }}</textarea>
            </div>
            <div class="form-group">
                <label for="brand">Brand:</label>
                <input type="text" class="form-control" id="brand" name="brand" value="{{ product.brand }}" required>
            </div>

            <label for="available">Available:</label>
            <select name="available" id="available">
                <option value=1 {% if product.available == 1 %} selected {% endif %}>True</option>
                <option value=0 {% if product.available == 0 %} selected {% endif %}>False</option>
            </select>
            
            <div class="form-group">
                <label for="price">Цена:</label>
                <input type="number" class="form-control" id="price" name="price" value="{{ product.price }}" required>
            </div>
            <div class="form-group">
                <label for="price_Discount">Цена пред попуст:</label>
                <input type="number" class="form-control" id="price_Discount" name="price_Discount" value="{{ product.price_Discount }}" required>
            </div>
            
            <div>
                <label for="deliveryCost">Достава:</label>
                <select name="deliveryCost" id="deliveryCost">
                    <option value=150 {% if product.deliveryCost == 150 %} selected {% endif %}>150</option>
                    <option value=0 {% if product.deliveryCost == 0 %} selected {% endif %}>Бесплатна Достава</option>
                    <option value="custom" {% if product.deliveryCost not in [150, 0] %} selected {% endif %}>Внеси цена</option>
                </select>
                <input type="number" id="customDeliveryCost" name="customDeliveryCost" placeholder="Внеси цена" style="{% if product.deliveryCost not in [150, 0] %}display: block;{% else %}display: none;{% endif %}" value="{{ product.deliveryCost }}">
            </div>

            <div class="form-group">
                <label for="productNo">Product Number:</label>
                <input type="text" class="form-control" id="productNo" name="productNo" value="{{ product.productNo }}" required>
            </div>
            <div class="form-group">
                <label for="productImages">Product Images:</label>
                <input type="file" class="form-control-file" id="productImages" name="product_images[]" value="product_paths" multiple accept=".jpg, .jpeg, .png">
            </div>
            <div class="form-group">
                <label for="existingProductImages">Existing Product Images:</label>
                <div id="existingProductImagesContainer" class="d-flex flex-wrap">
                    {% if product.product_paths %}
                        {% for image in product.product_paths.split(',') %}
                            <div class="col-2 mb-3">
                                <div class="position-relative">
                                    <img src="/home/davor/Pictures/Static-Sx/{{ image }}" alt="{{image}}" class="existing-product-image img-fluid" onclick="selectImage(this)">
                                    <input type="hidden" name="selectedImage" id="selectedImage" value="{{image}}">

                                    <div class="image-overlay"></div>
                                </div>
                            </div>
                        {% endfor %}
                    {% else %}
                        <p>No existing product images found.</p>
                    {% endif %}
                </div>
            </div>
            

            <div class="form-group">
                <label for="productImage">Main Product Image:</label>
                <input type="file" class="form-control-file" id="productImage" name="product_path" value="product_path" accept=".jpg, .jpeg, .png, .gif">
            </div>

            <!-- Display existing specifications -->
            <div class="mt-4">
                <div class="form-group">
                    <h2>Постоечки спецификации</h2>
                    {% if specifications %}
                        <div class="specifications">
                            {% for spec in specifications %}
                                <div class="specification">
                                    <div class="form-group">
                                        <label for="spec_color">Боја:</label>
                                        <input type="text" class="form-control" name="spec_color[]" value="{{ spec.color }}">
                                    </div>
                                    <div class="form-group">
                                        <label for="spec_size">Големина:</label>
                                        <input type="text" class="form-control" name="spec_size[]" value="{{ spec.size }}">
                                    </div>
                                    <div class="form-group">
                                        <label for="spec_new_price">Нова цена:</label>
                                        <input type="number" class="form-control" name="spec_new_price[]" value="{{ spec.new_price }}">
                                        <button type="button" class="btn btn-danger removeSpecification">Remove</button>
                                    </div>
                                </div>
                            {% endfor %}
                        </div>
                    {% else %}
                        <p>No existing specifications found.</p>
                    {% endif %}
                </div>                
            </div>


            <div class="form-group" id="specificationSection">
                <h2>Боја,Големина, нова цена</h2>
                <div class="specification d-none">
                    <div class="form-group">
                        <label for="spec_color">Color:</label>
                        <input type="text" class="form-control" name="spec_color[]" >
                    </div>
                    <div class="form-group">
                        <label for="spec_size">Size:</label>
                        <input type="text" class="form-control" name="spec_size[]" >
                    </div>
                    <div class="form-group">
                        <label for="spec_new_price">New Price:</label>
                        <input type="number" class="form-control" name="spec_new_price[]" >
                    </div>
                </div>

                <button type="button" class="btn btn-primary" id="addSpecification">Add Specification</button>
            </div>
             <p>There are {{specification_counter}} specifications</p>
        

            <input type="hidden" name="specificationCounter" id="specificationCounter" value={{specification_counter}}>

            <!-- Specifications container -->
            <div class="form-group" id="specificationSection">
                <h2>New Specifications</h2>
            </div>


               <!-- Category dropdown -->
               <div class="form-group">
                <label for="cid">Category:</label>
                <select class="form-control" id="cid" name="cid" required>
                    <option value="" selected disabled>Select Category</option>
                    {% for category in categories %}
                        <option value="{{ category.cid }}" {% if category.cid == product.cid %}selected{% endif %}>
                            {{ category.name }}
                        </option>
                    {% endfor %}
                </select>
            </div>

            <!-- Subcategory dropdown -->
            <div class="form-group">
                <label for="scid">Subcategory:</label>
                <select class="form-control" id="scid" name="scid" required disabled>
                    <option value="" selected disabled>Select Subcategory</option>
                    <!-- The options will be populated dynamically using JavaScript -->
                </select>

            </div>
            <button type="submit" class="btn btn-primary">Update Product</button>
        </form>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.1/dist/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>


    <script>
        function selectImage(imgElement) {
            document.querySelectorAll('.existing-product-image.selected').forEach(function (img) {
                img.classList.remove('selected');
            });
    
            imgElement.classList.add('selected');
    
            let selectedImage = imgElement.alt;
    
            document.getElementById('selectedImage').value = selectedImage;
    
            console.log('Selected Image:', selectedImage);
        }
    </script>
    
    <script>
        $(document).ready(function () {
            const subcategoryDropdown = $("#scid");
            const categoryDropdown = $("#cid");
    
            const subcategoriesData = JSON.parse('{{ subcategories | tojson | safe }}');
    
            categoryDropdown.on("change", function () {
                const selectedCategoryId = $(this).val();
                subcategoryDropdown.empty().prop("disabled", true);
    
                if (selectedCategoryId) {
                    const selectedSubcategories = subcategoriesData[selectedCategoryId];
                    if (selectedSubcategories) {
                        selectedSubcategories.forEach((subcategory) => {
                            const option = $(`<option value="${subcategory.scid}">${subcategory.name}</option>`);
                            if (subcategory.scid === "{{ product.scid }}") {
                                option.prop('selected', true);
                            }
                            subcategoryDropdown.append(option);
                        });
                        subcategoryDropdown.prop("disabled", false);
                    } else {
                        console.error("No subcategories found for the selected category");
                    }
                }
            });
    
            categoryDropdown.trigger('change');
        });
    </script>
    
    <script>
        const deliveryCostSelect = document.getElementById('deliveryCost');
        const customDeliveryCostInput = document.getElementById('customDeliveryCost');
    
        deliveryCostSelect.addEventListener('change', function () {
            const selectedValue = deliveryCostSelect.value;
    
            if (selectedValue === 'custom') {
                customDeliveryCostInput.style.display = 'block';
            } else {
                customDeliveryCostInput.style.display = 'none';
            }
        });
    </script>
 <script>
$(document).ready(function () {
    var specificationCounterValue = getComputedStyle(document.documentElement).getPropertyValue('--specification-counter');
    let specificationCounter = parseInt(specificationCounterValue);

    $("#addSpecification").on("click", function () {
        // Clone the existing specification div
        const newSpecification = $(".specification:first").clone();

        newSpecification.find("input").val("");

        newSpecification.find("input").each(function () {
            const currentName = $(this).attr("name");
            const newName = currentName.replace(/\[\d+\]/, `[${specificationCounter}]`);
            $(this).attr("name", newName);
        });

        // Increment the counter and update the hidden input field
        specificationCounter++;
        $("#specificationCounter").val(specificationCounter);

        // Append the new specification
        $("#specificationSection").append(newSpecification);

        if (specificationCounter > 0) {
            newSpecification.removeClass("d-none");
        }
        console.log(specificationCounter + 'TEST ----------------- +');
    });

    $(document).on("click", ".removeSpecification", function () {
        specificationCounter--;
        $("#specificationCounter").val(specificationCounter.toString());
        $(this).closest('.specification').remove();
        console.log(specificationCounter + 'TEST ----------------- -');
    });
});

</script>
</body>
</html>
